"""Generate user, sim and task -related tables

Revision ID: 1b458f70ba95
Revises:
Create Date: 2025-10-04 15:45:46.464480

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1b458f70ba95"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("password_hash", sa.String(length=512), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "background_tasks",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("task_id", sa.String(length=36), nullable=False),
        sa.Column(
            "task_type",
            sa.Enum("SIMULATION", "ANIMATION", "OPTIMIZATION", name="tasktype"),
            nullable=False,
        ),
        sa.Column("subject_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_background_tasks_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_background_tasks")),
    )
    op.create_index(
        op.f("ix_background_tasks_subject_id"),
        "background_tasks",
        ["subject_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_background_tasks_task_id"),
        "background_tasks",
        ["task_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_background_tasks_task_type"),
        "background_tasks",
        ["task_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_background_tasks_user_id"),
        "background_tasks",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "simulation_configurations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "simulation_parameters",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_simulation_configurations_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_simulation_configurations")
        ),
    )
    op.create_index(
        op.f("ix_simulation_configurations_user_id"),
        "simulation_configurations",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "simulation_reports",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "COMPLETED", "FAILED", name="reportstatus"),
            nullable=False,
        ),
        sa.Column(
            "results", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("configuration_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["configuration_id"],
            ["simulation_configurations.id"],
            name=op.f(
                "fk_simulation_reports_configuration_id_simulation_configurations"
            ),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_simulation_reports")),
    )
    op.create_index(
        op.f("ix_simulation_reports_configuration_id"),
        "simulation_reports",
        ["configuration_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_simulation_reports_status"),
        "simulation_reports",
        ["status"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_simulation_reports_status"), table_name="simulation_reports"
    )
    op.drop_index(
        op.f("ix_simulation_reports_configuration_id"),
        table_name="simulation_reports",
    )
    op.drop_table("simulation_reports")
    op.drop_index(
        op.f("ix_simulation_configurations_user_id"),
        table_name="simulation_configurations",
    )
    op.drop_table("simulation_configurations")
    op.drop_index(
        op.f("ix_background_tasks_user_id"), table_name="background_tasks"
    )
    op.drop_index(
        op.f("ix_background_tasks_task_type"), table_name="background_tasks"
    )
    op.drop_index(
        op.f("ix_background_tasks_task_id"), table_name="background_tasks"
    )
    op.drop_index(
        op.f("ix_background_tasks_subject_id"), table_name="background_tasks"
    )
    op.drop_table("background_tasks")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.execute("DROP TYPE reportstatus;")
    op.execute("DROP TYPE tasktype;")
    # ### end Alembic commands ###
